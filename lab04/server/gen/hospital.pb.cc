// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hospital.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hospital.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Person_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Person_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExaminationResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExaminationResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddExaminationReturnMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddExaminationReturnMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hospital_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hospital_2eproto() {
  protobuf_AddDesc_hospital_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hospital.proto");
  GOOGLE_CHECK(file != NULL);
  Person_descriptor_ = file->message_type(0);
  static const int Person_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, firstname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, lastname_),
  };
  Person_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Person_descriptor_,
      Person::internal_default_instance(),
      Person_offsets_,
      -1,
      -1,
      -1,
      sizeof(Person),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _internal_metadata_));
  Parameter_descriptor_ = file->message_type(1);
  static const int Parameter_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter, unit_),
  };
  Parameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Parameter_descriptor_,
      Parameter::internal_default_instance(),
      Parameter_offsets_,
      -1,
      -1,
      -1,
      sizeof(Parameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter, _internal_metadata_));
  ExaminationResult_descriptor_ = file->message_type(2);
  static const int ExaminationResult_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExaminationResult, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExaminationResult, commisioner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExaminationResult, person_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExaminationResult, parameters_),
  };
  ExaminationResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExaminationResult_descriptor_,
      ExaminationResult::internal_default_instance(),
      ExaminationResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExaminationResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExaminationResult, _internal_metadata_));
  AddExaminationReturnMsg_descriptor_ = file->message_type(3);
  static const int AddExaminationReturnMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddExaminationReturnMsg, retval_),
  };
  AddExaminationReturnMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddExaminationReturnMsg_descriptor_,
      AddExaminationReturnMsg::internal_default_instance(),
      AddExaminationReturnMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddExaminationReturnMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddExaminationReturnMsg, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hospital_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Person_descriptor_, Person::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Parameter_descriptor_, Parameter::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExaminationResult_descriptor_, ExaminationResult::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddExaminationReturnMsg_descriptor_, AddExaminationReturnMsg::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hospital_2eproto() {
  Person_default_instance_.Shutdown();
  delete Person_reflection_;
  Parameter_default_instance_.Shutdown();
  delete Parameter_reflection_;
  ExaminationResult_default_instance_.Shutdown();
  delete ExaminationResult_reflection_;
  AddExaminationReturnMsg_default_instance_.Shutdown();
  delete AddExaminationReturnMsg_reflection_;
}

void protobuf_InitDefaults_hospital_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  Person_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Parameter_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ExaminationResult_default_instance_.DefaultConstruct();
  AddExaminationReturnMsg_default_instance_.DefaultConstruct();
  Person_default_instance_.get_mutable()->InitAsDefaultInstance();
  Parameter_default_instance_.get_mutable()->InitAsDefaultInstance();
  ExaminationResult_default_instance_.get_mutable()->InitAsDefaultInstance();
  AddExaminationReturnMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hospital_2eproto_once_);
void protobuf_InitDefaults_hospital_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hospital_2eproto_once_,
                 &protobuf_InitDefaults_hospital_2eproto_impl);
}
void protobuf_AddDesc_hospital_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hospital_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016hospital.proto\"9\n\006Person\022\n\n\002Id\030\001 \001(\005\022\021"
    "\n\tFirstName\030\002 \001(\t\022\020\n\010LastName\030\003 \001(\t\"6\n\tP"
    "arameter\022\014\n\004Name\030\001 \001(\t\022\r\n\005Value\030\002 \001(\002\022\014\n"
    "\004Unit\030\003 \001(\t\"o\n\021ExaminationResult\022\014\n\004Date"
    "\030\001 \001(\t\022\023\n\013Commisioner\030\002 \001(\t\022\027\n\006Person\030\003 "
    "\001(\0132\007.Person\022\036\n\nParameters\030\004 \003(\0132\n.Param"
    "eter\")\n\027AddExaminationReturnMsg\022\016\n\006Retva"
    "l\030\001 \001(\0102\212\001\n\010Hospital\022@\n\016AddExamination\022\022"
    ".ExaminationResult\032\030.AddExaminationRetur"
    "nMsg\"\000\022<\n\016GetExamination\022\022.ExaminationRe"
    "sult\032\022.ExaminationResult\"\0000\001b\006proto3", 436);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hospital.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hospital_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hospital_2eproto_once_);
void protobuf_AddDesc_hospital_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hospital_2eproto_once_,
                 &protobuf_AddDesc_hospital_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hospital_2eproto {
  StaticDescriptorInitializer_hospital_2eproto() {
    protobuf_AddDesc_hospital_2eproto();
  }
} static_descriptor_initializer_hospital_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Person::kIdFieldNumber;
const int Person::kFirstNameFieldNumber;
const int Person::kLastNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Person::Person()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hospital_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Person)
}

void Person::InitAsDefaultInstance() {
}

Person::Person(const Person& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Person)
}

void Person::SharedCtor() {
  firstname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

Person::~Person() {
  // @@protoc_insertion_point(destructor:Person)
  SharedDtor();
}

void Person::SharedDtor() {
  firstname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Person::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Person::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Person_descriptor_;
}

const Person& Person::default_instance() {
  protobuf_InitDefaults_hospital_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Person> Person_default_instance_;

Person* Person::New(::google::protobuf::Arena* arena) const {
  Person* n = new Person;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Person::Clear() {
// @@protoc_insertion_point(message_clear_start:Person)
  id_ = 0;
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Person::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Person)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FirstName;
        break;
      }

      // optional string FirstName = 2;
      case 2: {
        if (tag == 18) {
         parse_FirstName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firstname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firstname().data(), this->firstname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Person.FirstName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_LastName;
        break;
      }

      // optional string LastName = 3;
      case 3: {
        if (tag == 26) {
         parse_LastName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastname().data(), this->lastname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Person.LastName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Person)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Person)
  return false;
#undef DO_
}

void Person::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Person)
  // optional int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string FirstName = 2;
  if (this->firstname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firstname().data(), this->firstname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Person.FirstName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->firstname(), output);
  }

  // optional string LastName = 3;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Person.LastName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->lastname(), output);
  }

  // @@protoc_insertion_point(serialize_end:Person)
}

::google::protobuf::uint8* Person::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Person)
  // optional int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string FirstName = 2;
  if (this->firstname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firstname().data(), this->firstname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Person.FirstName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->firstname(), target);
  }

  // optional string LastName = 3;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Person.LastName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->lastname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Person)
  return target;
}

size_t Person::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Person)
  size_t total_size = 0;

  // optional int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string FirstName = 2;
  if (this->firstname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firstname());
  }

  // optional string LastName = 3;
  if (this->lastname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Person::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Person)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Person* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Person>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Person)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Person)
    UnsafeMergeFrom(*source);
  }
}

void Person::MergeFrom(const Person& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Person)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Person::UnsafeMergeFrom(const Person& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.firstname().size() > 0) {

    firstname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firstname_);
  }
  if (from.lastname().size() > 0) {

    lastname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastname_);
  }
}

void Person::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Person::CopyFrom(const Person& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Person)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Person::IsInitialized() const {

  return true;
}

void Person::Swap(Person* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Person::InternalSwap(Person* other) {
  std::swap(id_, other->id_);
  firstname_.Swap(&other->firstname_);
  lastname_.Swap(&other->lastname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Person::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Person_descriptor_;
  metadata.reflection = Person_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Person

// optional int32 Id = 1;
void Person::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 Person::id() const {
  // @@protoc_insertion_point(field_get:Person.Id)
  return id_;
}
void Person::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Person.Id)
}

// optional string FirstName = 2;
void Person::clear_firstname() {
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Person::firstname() const {
  // @@protoc_insertion_point(field_get:Person.FirstName)
  return firstname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Person::set_firstname(const ::std::string& value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Person.FirstName)
}
void Person::set_firstname(const char* value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Person.FirstName)
}
void Person::set_firstname(const char* value, size_t size) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Person.FirstName)
}
::std::string* Person::mutable_firstname() {
  
  // @@protoc_insertion_point(field_mutable:Person.FirstName)
  return firstname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Person::release_firstname() {
  // @@protoc_insertion_point(field_release:Person.FirstName)
  
  return firstname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Person::set_allocated_firstname(::std::string* firstname) {
  if (firstname != NULL) {
    
  } else {
    
  }
  firstname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstname);
  // @@protoc_insertion_point(field_set_allocated:Person.FirstName)
}

// optional string LastName = 3;
void Person::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Person::lastname() const {
  // @@protoc_insertion_point(field_get:Person.LastName)
  return lastname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Person::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Person.LastName)
}
void Person::set_lastname(const char* value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Person.LastName)
}
void Person::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Person.LastName)
}
::std::string* Person::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:Person.LastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Person::release_lastname() {
  // @@protoc_insertion_point(field_release:Person.LastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Person::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:Person.LastName)
}

inline const Person* Person::internal_default_instance() {
  return &Person_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parameter::kNameFieldNumber;
const int Parameter::kValueFieldNumber;
const int Parameter::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parameter::Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hospital_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Parameter)
}

void Parameter::InitAsDefaultInstance() {
}

Parameter::Parameter(const Parameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Parameter)
}

void Parameter::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _cached_size_ = 0;
}

Parameter::~Parameter() {
  // @@protoc_insertion_point(destructor:Parameter)
  SharedDtor();
}

void Parameter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Parameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parameter_descriptor_;
}

const Parameter& Parameter::default_instance() {
  protobuf_InitDefaults_hospital_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Parameter> Parameter_default_instance_;

Parameter* Parameter::New(::google::protobuf::Arena* arena) const {
  Parameter* n = new Parameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:Parameter)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Parameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Parameter.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_Value;
        break;
      }

      // optional float Value = 2;
      case 2: {
        if (tag == 21) {
         parse_Value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Unit;
        break;
      }

      // optional string Unit = 3;
      case 3: {
        if (tag == 26) {
         parse_Unit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit().data(), this->unit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Parameter.Unit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Parameter)
  return false;
#undef DO_
}

void Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Parameter)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parameter.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional float Value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  // optional string Unit = 3;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parameter.Unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->unit(), output);
  }

  // @@protoc_insertion_point(serialize_end:Parameter)
}

::google::protobuf::uint8* Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Parameter)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parameter.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float Value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  // optional string Unit = 3;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parameter.Unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->unit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Parameter)
  return target;
}

size_t Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Parameter)
  size_t total_size = 0;

  // optional string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional float Value = 2;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  // optional string Unit = 3;
  if (this->unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Parameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Parameter)
    UnsafeMergeFrom(*source);
  }
}

void Parameter::MergeFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Parameter)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Parameter::UnsafeMergeFrom(const Parameter& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.unit().size() > 0) {

    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
}

void Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameter::CopyFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parameter)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Parameter::IsInitialized() const {

  return true;
}

void Parameter::Swap(Parameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parameter::InternalSwap(Parameter* other) {
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  unit_.Swap(&other->unit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Parameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parameter_descriptor_;
  metadata.reflection = Parameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Parameter

// optional string Name = 1;
void Parameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Parameter::name() const {
  // @@protoc_insertion_point(field_get:Parameter.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Parameter::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Parameter.Name)
}
void Parameter::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Parameter.Name)
}
void Parameter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Parameter.Name)
}
::std::string* Parameter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Parameter.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Parameter::release_name() {
  // @@protoc_insertion_point(field_release:Parameter.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Parameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Parameter.Name)
}

// optional float Value = 2;
void Parameter::clear_value() {
  value_ = 0;
}
float Parameter::value() const {
  // @@protoc_insertion_point(field_get:Parameter.Value)
  return value_;
}
void Parameter::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Parameter.Value)
}

// optional string Unit = 3;
void Parameter::clear_unit() {
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Parameter::unit() const {
  // @@protoc_insertion_point(field_get:Parameter.Unit)
  return unit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Parameter::set_unit(const ::std::string& value) {
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Parameter.Unit)
}
void Parameter::set_unit(const char* value) {
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Parameter.Unit)
}
void Parameter::set_unit(const char* value, size_t size) {
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Parameter.Unit)
}
::std::string* Parameter::mutable_unit() {
  
  // @@protoc_insertion_point(field_mutable:Parameter.Unit)
  return unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Parameter::release_unit() {
  // @@protoc_insertion_point(field_release:Parameter.Unit)
  
  return unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Parameter::set_allocated_unit(::std::string* unit) {
  if (unit != NULL) {
    
  } else {
    
  }
  unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unit);
  // @@protoc_insertion_point(field_set_allocated:Parameter.Unit)
}

inline const Parameter* Parameter::internal_default_instance() {
  return &Parameter_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExaminationResult::kDateFieldNumber;
const int ExaminationResult::kCommisionerFieldNumber;
const int ExaminationResult::kPersonFieldNumber;
const int ExaminationResult::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExaminationResult::ExaminationResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hospital_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExaminationResult)
}

void ExaminationResult::InitAsDefaultInstance() {
  person_ = const_cast< ::Person*>(
      ::Person::internal_default_instance());
}

ExaminationResult::ExaminationResult(const ExaminationResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ExaminationResult)
}

void ExaminationResult::SharedCtor() {
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commisioner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  person_ = NULL;
  _cached_size_ = 0;
}

ExaminationResult::~ExaminationResult() {
  // @@protoc_insertion_point(destructor:ExaminationResult)
  SharedDtor();
}

void ExaminationResult::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commisioner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ExaminationResult_default_instance_.get()) {
    delete person_;
  }
}

void ExaminationResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExaminationResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExaminationResult_descriptor_;
}

const ExaminationResult& ExaminationResult::default_instance() {
  protobuf_InitDefaults_hospital_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ExaminationResult> ExaminationResult_default_instance_;

ExaminationResult* ExaminationResult::New(::google::protobuf::Arena* arena) const {
  ExaminationResult* n = new ExaminationResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExaminationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:ExaminationResult)
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commisioner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && person_ != NULL) delete person_;
  person_ = NULL;
  parameters_.Clear();
}

bool ExaminationResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExaminationResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Date = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ExaminationResult.Date"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Commisioner;
        break;
      }

      // optional string Commisioner = 2;
      case 2: {
        if (tag == 18) {
         parse_Commisioner:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commisioner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commisioner().data(), this->commisioner().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ExaminationResult.Commisioner"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Person;
        break;
      }

      // optional .Person Person = 3;
      case 3: {
        if (tag == 26) {
         parse_Person:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_person()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Parameters;
        break;
      }

      // repeated .Parameter Parameters = 4;
      case 4: {
        if (tag == 34) {
         parse_Parameters:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_Parameters;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExaminationResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExaminationResult)
  return false;
#undef DO_
}

void ExaminationResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExaminationResult)
  // optional string Date = 1;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ExaminationResult.Date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->date(), output);
  }

  // optional string Commisioner = 2;
  if (this->commisioner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commisioner().data(), this->commisioner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ExaminationResult.Commisioner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->commisioner(), output);
  }

  // optional .Person Person = 3;
  if (this->has_person()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->person_, output);
  }

  // repeated .Parameter Parameters = 4;
  for (unsigned int i = 0, n = this->parameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->parameters(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ExaminationResult)
}

::google::protobuf::uint8* ExaminationResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExaminationResult)
  // optional string Date = 1;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ExaminationResult.Date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->date(), target);
  }

  // optional string Commisioner = 2;
  if (this->commisioner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commisioner().data(), this->commisioner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ExaminationResult.Commisioner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->commisioner(), target);
  }

  // optional .Person Person = 3;
  if (this->has_person()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->person_, false, target);
  }

  // repeated .Parameter Parameters = 4;
  for (unsigned int i = 0, n = this->parameters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->parameters(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ExaminationResult)
  return target;
}

size_t ExaminationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExaminationResult)
  size_t total_size = 0;

  // optional string Date = 1;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // optional string Commisioner = 2;
  if (this->commisioner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commisioner());
  }

  // optional .Person Person = 3;
  if (this->has_person()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->person_);
  }

  // repeated .Parameter Parameters = 4;
  {
    unsigned int count = this->parameters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parameters(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExaminationResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExaminationResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExaminationResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExaminationResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExaminationResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExaminationResult)
    UnsafeMergeFrom(*source);
  }
}

void ExaminationResult::MergeFrom(const ExaminationResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExaminationResult)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ExaminationResult::UnsafeMergeFrom(const ExaminationResult& from) {
  GOOGLE_DCHECK(&from != this);
  parameters_.MergeFrom(from.parameters_);
  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.commisioner().size() > 0) {

    commisioner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commisioner_);
  }
  if (from.has_person()) {
    mutable_person()->::Person::MergeFrom(from.person());
  }
}

void ExaminationResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExaminationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExaminationResult::CopyFrom(const ExaminationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExaminationResult)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ExaminationResult::IsInitialized() const {

  return true;
}

void ExaminationResult::Swap(ExaminationResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExaminationResult::InternalSwap(ExaminationResult* other) {
  date_.Swap(&other->date_);
  commisioner_.Swap(&other->commisioner_);
  std::swap(person_, other->person_);
  parameters_.UnsafeArenaSwap(&other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExaminationResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExaminationResult_descriptor_;
  metadata.reflection = ExaminationResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExaminationResult

// optional string Date = 1;
void ExaminationResult::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExaminationResult::date() const {
  // @@protoc_insertion_point(field_get:ExaminationResult.Date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExaminationResult::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExaminationResult.Date)
}
void ExaminationResult::set_date(const char* value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExaminationResult.Date)
}
void ExaminationResult::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExaminationResult.Date)
}
::std::string* ExaminationResult::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:ExaminationResult.Date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExaminationResult::release_date() {
  // @@protoc_insertion_point(field_release:ExaminationResult.Date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExaminationResult::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:ExaminationResult.Date)
}

// optional string Commisioner = 2;
void ExaminationResult::clear_commisioner() {
  commisioner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExaminationResult::commisioner() const {
  // @@protoc_insertion_point(field_get:ExaminationResult.Commisioner)
  return commisioner_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExaminationResult::set_commisioner(const ::std::string& value) {
  
  commisioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExaminationResult.Commisioner)
}
void ExaminationResult::set_commisioner(const char* value) {
  
  commisioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExaminationResult.Commisioner)
}
void ExaminationResult::set_commisioner(const char* value, size_t size) {
  
  commisioner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExaminationResult.Commisioner)
}
::std::string* ExaminationResult::mutable_commisioner() {
  
  // @@protoc_insertion_point(field_mutable:ExaminationResult.Commisioner)
  return commisioner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExaminationResult::release_commisioner() {
  // @@protoc_insertion_point(field_release:ExaminationResult.Commisioner)
  
  return commisioner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExaminationResult::set_allocated_commisioner(::std::string* commisioner) {
  if (commisioner != NULL) {
    
  } else {
    
  }
  commisioner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commisioner);
  // @@protoc_insertion_point(field_set_allocated:ExaminationResult.Commisioner)
}

// optional .Person Person = 3;
bool ExaminationResult::has_person() const {
  return this != internal_default_instance() && person_ != NULL;
}
void ExaminationResult::clear_person() {
  if (GetArenaNoVirtual() == NULL && person_ != NULL) delete person_;
  person_ = NULL;
}
const ::Person& ExaminationResult::person() const {
  // @@protoc_insertion_point(field_get:ExaminationResult.Person)
  return person_ != NULL ? *person_
                         : *::Person::internal_default_instance();
}
::Person* ExaminationResult::mutable_person() {
  
  if (person_ == NULL) {
    person_ = new ::Person;
  }
  // @@protoc_insertion_point(field_mutable:ExaminationResult.Person)
  return person_;
}
::Person* ExaminationResult::release_person() {
  // @@protoc_insertion_point(field_release:ExaminationResult.Person)
  
  ::Person* temp = person_;
  person_ = NULL;
  return temp;
}
void ExaminationResult::set_allocated_person(::Person* person) {
  delete person_;
  person_ = person;
  if (person) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ExaminationResult.Person)
}

// repeated .Parameter Parameters = 4;
int ExaminationResult::parameters_size() const {
  return parameters_.size();
}
void ExaminationResult::clear_parameters() {
  parameters_.Clear();
}
const ::Parameter& ExaminationResult::parameters(int index) const {
  // @@protoc_insertion_point(field_get:ExaminationResult.Parameters)
  return parameters_.Get(index);
}
::Parameter* ExaminationResult::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:ExaminationResult.Parameters)
  return parameters_.Mutable(index);
}
::Parameter* ExaminationResult::add_parameters() {
  // @@protoc_insertion_point(field_add:ExaminationResult.Parameters)
  return parameters_.Add();
}
::google::protobuf::RepeatedPtrField< ::Parameter >*
ExaminationResult::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:ExaminationResult.Parameters)
  return &parameters_;
}
const ::google::protobuf::RepeatedPtrField< ::Parameter >&
ExaminationResult::parameters() const {
  // @@protoc_insertion_point(field_list:ExaminationResult.Parameters)
  return parameters_;
}

inline const ExaminationResult* ExaminationResult::internal_default_instance() {
  return &ExaminationResult_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddExaminationReturnMsg::kRetvalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddExaminationReturnMsg::AddExaminationReturnMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hospital_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddExaminationReturnMsg)
}

void AddExaminationReturnMsg::InitAsDefaultInstance() {
}

AddExaminationReturnMsg::AddExaminationReturnMsg(const AddExaminationReturnMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AddExaminationReturnMsg)
}

void AddExaminationReturnMsg::SharedCtor() {
  retval_ = false;
  _cached_size_ = 0;
}

AddExaminationReturnMsg::~AddExaminationReturnMsg() {
  // @@protoc_insertion_point(destructor:AddExaminationReturnMsg)
  SharedDtor();
}

void AddExaminationReturnMsg::SharedDtor() {
}

void AddExaminationReturnMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddExaminationReturnMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddExaminationReturnMsg_descriptor_;
}

const AddExaminationReturnMsg& AddExaminationReturnMsg::default_instance() {
  protobuf_InitDefaults_hospital_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AddExaminationReturnMsg> AddExaminationReturnMsg_default_instance_;

AddExaminationReturnMsg* AddExaminationReturnMsg::New(::google::protobuf::Arena* arena) const {
  AddExaminationReturnMsg* n = new AddExaminationReturnMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddExaminationReturnMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:AddExaminationReturnMsg)
  retval_ = false;
}

bool AddExaminationReturnMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddExaminationReturnMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Retval = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &retval_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddExaminationReturnMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddExaminationReturnMsg)
  return false;
#undef DO_
}

void AddExaminationReturnMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddExaminationReturnMsg)
  // optional bool Retval = 1;
  if (this->retval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->retval(), output);
  }

  // @@protoc_insertion_point(serialize_end:AddExaminationReturnMsg)
}

::google::protobuf::uint8* AddExaminationReturnMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AddExaminationReturnMsg)
  // optional bool Retval = 1;
  if (this->retval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->retval(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AddExaminationReturnMsg)
  return target;
}

size_t AddExaminationReturnMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AddExaminationReturnMsg)
  size_t total_size = 0;

  // optional bool Retval = 1;
  if (this->retval() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddExaminationReturnMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddExaminationReturnMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddExaminationReturnMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddExaminationReturnMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddExaminationReturnMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddExaminationReturnMsg)
    UnsafeMergeFrom(*source);
  }
}

void AddExaminationReturnMsg::MergeFrom(const AddExaminationReturnMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddExaminationReturnMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AddExaminationReturnMsg::UnsafeMergeFrom(const AddExaminationReturnMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.retval() != 0) {
    set_retval(from.retval());
  }
}

void AddExaminationReturnMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddExaminationReturnMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddExaminationReturnMsg::CopyFrom(const AddExaminationReturnMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddExaminationReturnMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AddExaminationReturnMsg::IsInitialized() const {

  return true;
}

void AddExaminationReturnMsg::Swap(AddExaminationReturnMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddExaminationReturnMsg::InternalSwap(AddExaminationReturnMsg* other) {
  std::swap(retval_, other->retval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddExaminationReturnMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddExaminationReturnMsg_descriptor_;
  metadata.reflection = AddExaminationReturnMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddExaminationReturnMsg

// optional bool Retval = 1;
void AddExaminationReturnMsg::clear_retval() {
  retval_ = false;
}
bool AddExaminationReturnMsg::retval() const {
  // @@protoc_insertion_point(field_get:AddExaminationReturnMsg.Retval)
  return retval_;
}
void AddExaminationReturnMsg::set_retval(bool value) {
  
  retval_ = value;
  // @@protoc_insertion_point(field_set:AddExaminationReturnMsg.Retval)
}

inline const AddExaminationReturnMsg* AddExaminationReturnMsg::internal_default_instance() {
  return &AddExaminationReturnMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
